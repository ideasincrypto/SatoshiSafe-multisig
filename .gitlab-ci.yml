image: node:lts-alpine

cache:
    key: ${CI_COMMIT_REF_SLUG}  # this sets the key to the branch name
    paths:
        - frontend/node_modules
        - frontend/yarn.lock
        - functions/node_modules
        - functions/yarn.lock

stages:
    - test
    - build
    - deploy

.unit-test:
    stage: test
    script:
        - echo "Running unit tests... This will take about 60 seconds."
        - sleep 60
        - echo "Code coverage is 90%"

lint-test-frontend:
    stage: test
    before_script:
        - apk update && apk add git python3 make g++ 
        - cd $CI_PROJECT_DIR/frontend && yarn install
    script:
        - echo "Linting code... This will take about 10 seconds."
        - yarn eslint:verify
        - echo "No lint issues found."

lint-test-functions:
    stage: test
    before_script:
        - apk update && apk add python3 make g++ git
        - cd $CI_PROJECT_DIR/functions && yarn install
    script:
        - echo "Linting code... This will take about 10 seconds."
        - yarn eslint:verify
        - echo "No lint issues found."

unit-test-functions:
    stage: test
    before_script:
        - apk update && apk add python3 make g++ git openjdk11
        - cd $CI_PROJECT_DIR/functions && yarn install
        - cp $GOOGLE_APPLICATION_CREDENTIALS_PLAYGROUND ./serviceAccountKey.json
        - yarn global add firebase-tools
    script:
        - echo "Testing code... This will take about 10 seconds."
        - export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS_PLAYGROUND && yarn serve:test --project playground
        - echo "No test issues found."
    after_script:
        - cd $CI_PROJECT_DIR/functions
        - rm -f serviceAccountKey.json

format-test-frontend:
    stage: test
    before_script:
        - apk update && apk add python3 make g++ git
        - cd $CI_PROJECT_DIR/frontend && yarn install
    script:
        - echo "Formatting code... This will take about 10 seconds."
        - yarn format:verify
        - echo "No format issues found."

build-frontend:
    stage: build
    before_script:
        - apk update && apk add python3 make g++ git
        - cd $CI_PROJECT_DIR/frontend && yarn install
    script:
        - echo "Compiling the code..."
        - yarn build:playground
        - echo "Compile complete."
    only:
        - main
    artifacts:
        paths:
            - $CI_PROJECT_DIR/frontend/dist
        expire_in: 1 week

deploy-hosting-playground:
    stage: deploy
    only:
        - main
    dependencies:
        - build-frontend
    before_script:
        - apk update && apk add python3 make g++ git
        - cd $CI_PROJECT_DIR/frontend && yarn install
        - yarn global add firebase-tools
    script:
        - cd $CI_PROJECT_DIR/frontend
        - echo "Deploying application..."
        - export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS_PLAYGROUND && firebase deploy --only hosting --project playground
        - echo "Application successfully deployed."

deploy-functions-playground:
    stage: deploy
    only:
        - main
    before_script:
        - apk update && apk add python3 make g++ git
        - cd $CI_PROJECT_DIR/functions && yarn install
        - yarn global add firebase-tools
    script:
        - echo OPENAI_KEY=$OPENAI_KEY >> .env
        - echo TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID >> .env
        - echo TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN >> .env
        - echo TWILIO_NUMBER=$TWILIO_NUMBER_PLAYGROUND >> .env
        - echo TYPEFORM_SECRET=$TYPEFORM_SECRET_PLAYGROUND >> .env
        - echo ALCHEMY_KEY=$ALCHEMY_KEY >> .env
        - echo PRIVATE_EVM_KEY=$PRIVATE_EVM_KEY >> .env
        - echo SMTP2GO_USERNAME=$SMTP2GO_USERNAME >> .env
        - echo SMTP2GO_PASSWORD=$SMTP2GO_PASSWORD >> .env
        - echo "Deploying firebase functions..."
        - export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS_PLAYGROUND && firebase deploy --only functions --project playground
        - echo "Firebase functions successfully deployed."
    after_script:
        - cd $CI_PROJECT_DIR/functions
        - rm -f .env
